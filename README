# ROUTES-CLJ

A Clojure & ClojureScript library to build url and path fns.

## Usage

(require '[routes.core :refer :all])
(require '[routes.params :as params])

;; A server as a Ring like map.

(def example-com 
  {:scheme :https :server-name "example.com" :server-port 443})

;; Define some routes.

(defroute root []
  ["/"] :server example-com)

(defroute continents []
  ["/continents"]
  :root root-route
  :query-params {:location params/location})

(defroute continent [continent]
  ["/:id-:name" params/integer params/string]
  :root continents-route)

(defroute countries []
  ["/countries"]
  :root root-route)

(defroute country []
  ["/:iso-3166-1-alpha-2-:name" params/iso-3166-1-alpha-2 params/string]
  :root countries-route)

(defroute countries-of-continent []
  ["/countries"] :root continent-route)

(defroute country-of-continent [country]
  ["/:iso-3166-1-alpha-2-:name" params/iso-3166-1-alpha-2 params/string]
  :root countries-of-continent-route)

;; Test data.

(def europe {:id 1 :name "Europe"})

(def spain {:iso-3166-1-alpha-2 "es" :name "Spain"})

;; Build paths and urls.

(continents-path)
;=> "/continents"

(continents-url)
;=> "https://example.com/continents"

(continent-path europe)
;=> "/continents/1-europe"

(continent-url europe)
;=> "https://example.com/continents/1-europe"

(country-of-continent-path europe spain)
;=> "/continents/1-europe/countries/es-spain"

(country-of-continent-url europe spain)
;=> "https://example.com/continents/1-europe/countries/es-spain"

## License

Copyright Â© 2012 Roman Scherer

Distributed under the Eclipse Public License, the same as Clojure.
